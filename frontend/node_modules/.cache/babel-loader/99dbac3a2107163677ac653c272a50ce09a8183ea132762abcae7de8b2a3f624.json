{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAVAN SAI KUMAR\\\\OneDrive\\\\Desktop\\\\frontend\\\\frontend\\\\src\\\\components\\\\user\\\\audio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./audio.css\";\nimport Nav from \"./nav\";\nimport UserFooter from \"./userfooter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    const chunks = [];\n    recorder.ondataavailable = e => chunks.push(e.data);\n    recorder.onstop = () => {\n      setAudioBlob(new Blob(chunks, {\n        type: \"audio/wav\"\n      }));\n    };\n    recorder.start();\n    setMediaRecorder(recorder);\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!audioBlob || !name || !type) {\n      alert(\"Please fill out all fields and record audio before submitting.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", audioBlob, \"audio.wav\");\n    formData.append(\"name\", name);\n    formData.append(\"type\", type);\n    try {\n      const response = await fetch(\"http://localhost:8000/api/process-audio\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(`Form submitted successfully!\\nPredicted Location: ${data.prediction}`);\n      } else {\n        alert(\"Failed to process audio.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"An error occurred while submitting the form.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"audio-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type\",\n          children: \"Type of Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"type\",\n          value: type,\n          onChange: e => setType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Local Legends and Stories\",\n            children: \"Local Legends and Stories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cultural Explanations\",\n            children: \"Cultural Explanations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Folk Songs\",\n            children: \"Folk Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Language and Dialects\",\n            children: \"Language and Dialects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Traditional Crop Information\",\n            children: \"Traditional Crop Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Audio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: recording ? stopRecording : startRecording,\n          className: \"audiorecord-btn\",\n          children: recording ? \"Stop Recording\" : \"Record Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Recording saved! You can submit now.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Audio, \"VGLQav9hXE9WD23JgpFG6zRwobE=\");\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["React","useState","Nav","UserFooter","jsxDEV","_jsxDEV","Fragment","_Fragment","Audio","_s","recording","setRecording","audioBlob","setAudioBlob","mediaRecorder","setMediaRecorder","name","setName","type","setType","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","Blob","start","stopRecording","stop","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","json","success","prediction","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PAVAN SAI KUMAR/OneDrive/Desktop/frontend/frontend/src/components/user/audio.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./audio.css\";\r\nimport Nav from \"./nav\";\r\nimport UserFooter from \"./userfooter\";\r\n\r\nconst Audio = () => {\r\n    const [recording, setRecording] = useState(false);\r\n    const [audioBlob, setAudioBlob] = useState(null);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    const startRecording = async () => {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const recorder = new MediaRecorder(stream);\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = (e) => chunks.push(e.data);\r\n        recorder.onstop = () => {\r\n            setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\r\n        };\r\n\r\n        recorder.start();\r\n        setMediaRecorder(recorder);\r\n        setRecording(true);\r\n    };\r\n\r\n    const stopRecording = () => {\r\n        mediaRecorder.stop();\r\n        setRecording(false);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!audioBlob || !name || !type) {\r\n            alert(\"Please fill out all fields and record audio before submitting.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", audioBlob, \"audio.wav\");\r\n        formData.append(\"name\", name);\r\n        formData.append(\"type\", type);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/api/process-audio\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n                alert(`Form submitted successfully!\\nPredicted Location: ${data.prediction}`);\r\n            } else {\r\n                alert(\"Failed to process audio.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting form:\", error);\r\n            alert(\"An error occurred while submitting the form.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <form onSubmit={handleSubmit} className=\"audio-form\">\r\n                <div>\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"type\">Type of Data:</label>\r\n                    <select id=\"type\" value={type} onChange={(e) => setType(e.target.value)} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\r\n                        <option value=\"Cultural Explanations\">Cultural Explanations</option>\r\n                        <option value=\"Folk Songs\">Folk Songs</option>\r\n                        <option value=\"Language and Dialects\">Language and Dialects</option>\r\n                        <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Upload Audio:</label>\r\n                    <button type=\"button\" onClick={recording ? stopRecording : startRecording} className=\"audiorecord-btn\">\r\n                        {recording ? \"Stop Recording\" : \"Record Audio\"}\r\n                    </button>\r\n                    {audioBlob && <p>Recording saved! You can submit now.</p>}\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            <UserFooter />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Audio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}