{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAVAN SAI KUMAR\\\\OneDrive\\\\Desktop\\\\frontend\\\\frontend\\\\src\\\\components\\\\user\\\\audio.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import React, { useState } from \"react\";\n// import \"./audio.css\";\n// import Nav from \"./nav\";\n// import UserFooter from \"./userfooter\";\n// const Audio = () => {\n//   const [recording, setRecording] = useState(false);\n//   const [audioBlob, setAudioBlob] = useState(null);\n//   const [mediaRecorder, setMediaRecorder] = useState(null);\n\n//   const startRecording = async () => {\n//     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n//     const recorder = new MediaRecorder(stream);\n//     const chunks = [];\n\n//     recorder.ondataavailable = (e) => chunks.push(e.data);\n//     recorder.onstop = () => {\n//       setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\n//     };\n\n//     recorder.start();\n//     setMediaRecorder(recorder);\n//     setRecording(true);\n//   };\n\n//   const stopRecording = () => {\n//     mediaRecorder.stop();\n//     setRecording(false);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     alert(\"Form submitted successfully!\");\n//     // Add form submission logic here (e.g., send data to a server)\n//   };\n\n//   return (\n//     <>\n//     <Nav/>\n//     <div className=\"audiocontainer\">\n//       <div className=\"audiocard\">\n//         <h2>Submit Your Audio</h2>\n//         <form onSubmit={handleSubmit}>\n//           <label>\n//             Name:\n//             <input type=\"text\" name=\"name\" required />\n//           </label>\n//           <label>\n//             Type of Data:\n//             <select name=\"dataType\" required>\n//               <option value=\"\">Select</option>\n//               <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\n//               <option value=\"Cultural Explanations\">Cultural Explanations</option>\n//               <option value=\"Folk Songs\">Folk Songs</option>\n//               <option value=\"Language and Dialects\">Language and Dialects</option>\n//               <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\n//             </select>\n//           </label>\n//           <label>\n//             Upload Audio:\n//             <input type=\"file\" accept=\"audio/*\" />\n//           </label>\n//           <div className=\"audiorecord-section\">\n//             <button\n//               type=\"button\"\n//               onClick={recording ? stopRecording : startRecording}\n//               className=\"audiorecord-btn\"\n//             >\n//               {recording ? \"Stop Recording\" : \"Record Audio\"}\n//             </button>\n//           </div>\n//           {audioBlob && <p>Recording saved! You can submit now.</p>}\n//           <button type=\"submit\" className=\"audiosubmit-btn\">\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//       <div className=\"audiocard rules\">\n//         <h2>Rules and Conditions</h2>\n//         <ul>\n//           <li>No background noise in the audio recording.</li>\n//           <li>Start the audio with your name and the place you are from.</li>\n//           <li>Specify the place format: <b>village name, mandal name</b>.</li>\n//           <li>Then begin the original content.</li>\n//         </ul>\n//       </div>\n//     </div>\n//     <UserFooter/>\n//     </>\n//   );\n// }\n\n// export default Audio;\nimport React, { useState } from \"react\";\nimport \"./audio.css\";\nimport Nav from \"./nav\";\nimport UserFooter from \"./userfooter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    const chunks = [];\n    recorder.ondataavailable = e => chunks.push(e.data);\n    recorder.onstop = () => {\n      setAudioBlob(new Blob(chunks, {\n        type: \"audio/wav\"\n      }));\n    };\n    recorder.start();\n    setMediaRecorder(recorder);\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!audioBlob && !file) {\n      alert(\"Please record or upload an audio file before submitting.\");\n      return;\n    }\n    if (!name || !type) {\n      alert(\"Please fill out all fields before submitting.\");\n      return;\n    }\n    const formData = new FormData();\n    if (audioBlob) {\n      formData.append(\"file\", audioBlob, \"audio.wav\");\n    } else if (file) {\n      formData.append(\"file\", file);\n    }\n    formData.append(\"name\", name);\n    formData.append(\"type\", type);\n    try {\n      const response = await fetch(\"http://localhost:8000/api/process-audio\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(`Form submitted successfully!\\nPredicted Location: ${data.prediction}`);\n      } else {\n        alert(\"Failed to process audio.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n      alert(\"An error occurred while submitting the form.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audiocontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audiocard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Submit Your Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"audio-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Type of Data:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"dataType\",\n              value: type,\n              onChange: e => setType(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Local Legends and Stories\",\n                children: \"Local Legends and Stories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cultural Explanations\",\n                children: \"Cultural Explanations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Folk Songs\",\n                children: \"Folk Songs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Language and Dialects\",\n                children: \"Language and Dialects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Traditional Crop Information\",\n                children: \"Traditional Crop Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Audio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"audio/*\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audiorecord-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: recording ? stopRecording : startRecording,\n              className: \"audiorecord-btn\",\n              children: recording ? \"Stop Recording\" : \"Record Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Recording saved! You can submit now.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"audiosubmit-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audiocard rules\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rules and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No background noise in the audio recording.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Start the audio with your name and the place you are from.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Specify the place format: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"village name, mandal name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 43\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Then begin the original content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Audio, \"2qd6TC15l6vEAKBhX25sfmCZiFM=\");\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["React","useState","Nav","UserFooter","jsxDEV","_jsxDEV","Fragment","_Fragment","Audio","_s","recording","setRecording","audioBlob","setAudioBlob","mediaRecorder","setMediaRecorder","name","setName","type","setType","file","setFile","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","Blob","start","stopRecording","stop","handleFileChange","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","json","success","prediction","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","required","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PAVAN SAI KUMAR/OneDrive/Desktop/frontend/frontend/src/components/user/audio.js"],"sourcesContent":["// // App.js\r\n// import React, { useState } from \"react\";\r\n// import \"./audio.css\";\r\n// import Nav from \"./nav\";\r\n// import UserFooter from \"./userfooter\";\r\n// const Audio = () => {\r\n//   const [recording, setRecording] = useState(false);\r\n//   const [audioBlob, setAudioBlob] = useState(null);\r\n//   const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n//   const startRecording = async () => {\r\n//     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n//     const recorder = new MediaRecorder(stream);\r\n//     const chunks = [];\r\n\r\n//     recorder.ondataavailable = (e) => chunks.push(e.data);\r\n//     recorder.onstop = () => {\r\n//       setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\r\n//     };\r\n\r\n//     recorder.start();\r\n//     setMediaRecorder(recorder);\r\n//     setRecording(true);\r\n//   };\r\n\r\n//   const stopRecording = () => {\r\n//     mediaRecorder.stop();\r\n//     setRecording(false);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     alert(\"Form submitted successfully!\");\r\n//     // Add form submission logic here (e.g., send data to a server)\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//     <Nav/>\r\n//     <div className=\"audiocontainer\">\r\n//       <div className=\"audiocard\">\r\n//         <h2>Submit Your Audio</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <label>\r\n//             Name:\r\n//             <input type=\"text\" name=\"name\" required />\r\n//           </label>\r\n//           <label>\r\n//             Type of Data:\r\n//             <select name=\"dataType\" required>\r\n//               <option value=\"\">Select</option>\r\n//               <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\r\n//               <option value=\"Cultural Explanations\">Cultural Explanations</option>\r\n//               <option value=\"Folk Songs\">Folk Songs</option>\r\n//               <option value=\"Language and Dialects\">Language and Dialects</option>\r\n//               <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\r\n//             </select>\r\n//           </label>\r\n//           <label>\r\n//             Upload Audio:\r\n//             <input type=\"file\" accept=\"audio/*\" />\r\n//           </label>\r\n//           <div className=\"audiorecord-section\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={recording ? stopRecording : startRecording}\r\n//               className=\"audiorecord-btn\"\r\n//             >\r\n//               {recording ? \"Stop Recording\" : \"Record Audio\"}\r\n//             </button>\r\n//           </div>\r\n//           {audioBlob && <p>Recording saved! You can submit now.</p>}\r\n//           <button type=\"submit\" className=\"audiosubmit-btn\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//       <div className=\"audiocard rules\">\r\n//         <h2>Rules and Conditions</h2>\r\n//         <ul>\r\n//           <li>No background noise in the audio recording.</li>\r\n//           <li>Start the audio with your name and the place you are from.</li>\r\n//           <li>Specify the place format: <b>village name, mandal name</b>.</li>\r\n//           <li>Then begin the original content.</li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//     <UserFooter/>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Audio;\r\nimport React, { useState } from \"react\";\r\nimport \"./audio.css\";\r\nimport Nav from \"./nav\";\r\nimport UserFooter from \"./userfooter\";\r\n\r\nconst Audio = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    const chunks = [];\r\n\r\n    recorder.ondataavailable = (e) => chunks.push(e.data);\r\n    recorder.onstop = () => {\r\n      setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\r\n    };\r\n\r\n    recorder.start();\r\n    setMediaRecorder(recorder);\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorder.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!audioBlob && !file) {\r\n      alert(\"Please record or upload an audio file before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!name || !type) {\r\n      alert(\"Please fill out all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    if (audioBlob) {\r\n      formData.append(\"file\", audioBlob, \"audio.wav\");\r\n    } else if (file) {\r\n      formData.append(\"file\", file);\r\n    }\r\n    formData.append(\"name\", name);\r\n    formData.append(\"type\", type);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/process-audio\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        alert(`Form submitted successfully!\\nPredicted Location: ${data.prediction}`);\r\n      } else {\r\n        alert(\"Failed to process audio.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n      alert(\"An error occurred while submitting the form.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"audiocontainer\">\r\n        <div className=\"audiocard\">\r\n          <h2>Submit Your Audio</h2>\r\n          <form onSubmit={handleSubmit} className=\"audio-form\">\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n            </label>\r\n            <label>\r\n              Type of Data:\r\n              <select name=\"dataType\" value={type} onChange={(e) => setType(e.target.value)} required>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\r\n                <option value=\"Cultural Explanations\">Cultural Explanations</option>\r\n                <option value=\"Folk Songs\">Folk Songs</option>\r\n                <option value=\"Language and Dialects\">Language and Dialects</option>\r\n                <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              Upload Audio:\r\n              <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n            </label>\r\n            <div className=\"audiorecord-section\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={recording ? stopRecording : startRecording}\r\n                className=\"audiorecord-btn\"\r\n              >\r\n                {recording ? \"Stop Recording\" : \"Record Audio\"}\r\n              </button>\r\n              {audioBlob && <p>Recording saved! You can submit now.</p>}\r\n            </div>\r\n            <button type=\"submit\" className=\"audiosubmit-btn\">Submit</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"audiocard rules\">\r\n          <h2>Rules and Conditions</h2>\r\n          <ul>\r\n            <li>No background noise in the audio recording.</li>\r\n            <li>Start the audio with your name and the place you are from.</li>\r\n            <li>Specify the place format: <b>village name, mandal name</b>.</li>\r\n            <li>Then begin the original content.</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzE,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;IAC1C,MAAMO,MAAM,GAAG,EAAE;IAEjBF,QAAQ,CAACG,eAAe,GAAIC,CAAC,IAAKF,MAAM,CAACG,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC;IACrDN,QAAQ,CAACO,MAAM,GAAG,MAAM;MACtBtB,YAAY,CAAC,IAAIuB,IAAI,CAACN,MAAM,EAAE;QAAEZ,IAAI,EAAE;MAAY,CAAC,CAAC,CAAC;IACvD,CAAC;IAEDU,QAAQ,CAACS,KAAK,CAAC,CAAC;IAChBtB,gBAAgB,CAACa,QAAQ,CAAC;IAC1BjB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM2B,aAAa,GAAGA,CAAA,KAAM;IAC1BxB,aAAa,CAACyB,IAAI,CAAC,CAAC;IACpB5B,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM6B,gBAAgB,GAAIR,CAAC,IAAK;IAC9BX,OAAO,CAACW,CAAC,CAACS,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOX,CAAC,IAAK;IAChCA,CAAC,CAACY,cAAc,CAAC,CAAC;IAElB,IAAI,CAAChC,SAAS,IAAI,CAACQ,IAAI,EAAE;MACvByB,KAAK,CAAC,0DAA0D,CAAC;MACjE;IACF;IAEA,IAAI,CAAC7B,IAAI,IAAI,CAACE,IAAI,EAAE;MAClB2B,KAAK,CAAC,+CAA+C,CAAC;MACtD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,IAAInC,SAAS,EAAE;MACbkC,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpC,SAAS,EAAE,WAAW,CAAC;IACjD,CAAC,MAAM,IAAIQ,IAAI,EAAE;MACf0B,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5B,IAAI,CAAC;IAC/B;IACA0B,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEhC,IAAI,CAAC;IAC7B8B,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE9B,IAAI,CAAC;IAE7B,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMZ,IAAI,GAAG,MAAMe,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAInB,IAAI,CAACoB,OAAO,EAAE;QAChBT,KAAK,CAAC,qDAAqDX,IAAI,CAACqB,UAAU,EAAE,CAAC;MAC/E,CAAC,MAAM;QACLV,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CX,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACExC,OAAA,CAAAE,SAAA;IAAAmD,QAAA,gBACErD,OAAA,CAACH,GAAG;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPzD,OAAA;MAAK0D,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BrD,OAAA;QAAK0D,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBrD,OAAA;UAAAqD,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BzD,OAAA;UAAM2D,QAAQ,EAAErB,YAAa;UAACoB,SAAS,EAAC,YAAY;UAAAL,QAAA,gBAClDrD,OAAA;YAAAqD,QAAA,GAAO,OAEL,eAAArD,OAAA;cAAOa,IAAI,EAAC,MAAM;cAACF,IAAI,EAAC,MAAM;cAACiD,KAAK,EAAEjD,IAAK;cAACkD,QAAQ,EAAGlC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACS,MAAM,CAACwB,KAAK,CAAE;cAACE,QAAQ;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F,CAAC,eACRzD,OAAA;YAAAqD,QAAA,GAAO,eAEL,eAAArD,OAAA;cAAQW,IAAI,EAAC,UAAU;cAACiD,KAAK,EAAE/C,IAAK;cAACgD,QAAQ,EAAGlC,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACS,MAAM,CAACwB,KAAK,CAAE;cAACE,QAAQ;cAAAT,QAAA,gBACrFrD,OAAA;gBAAQ4D,KAAK,EAAC,EAAE;gBAAAP,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChCzD,OAAA;gBAAQ4D,KAAK,EAAC,2BAA2B;gBAAAP,QAAA,EAAC;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5EzD,OAAA;gBAAQ4D,KAAK,EAAC,uBAAuB;gBAAAP,QAAA,EAAC;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpEzD,OAAA;gBAAQ4D,KAAK,EAAC,YAAY;gBAAAP,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC9CzD,OAAA;gBAAQ4D,KAAK,EAAC,uBAAuB;gBAAAP,QAAA,EAAC;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpEzD,OAAA;gBAAQ4D,KAAK,EAAC,8BAA8B;gBAAAP,QAAA,EAAC;cAA4B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACRzD,OAAA;YAAAqD,QAAA,GAAO,eAEL,eAAArD,OAAA;cAAOa,IAAI,EAAC,MAAM;cAACkD,MAAM,EAAC,SAAS;cAACF,QAAQ,EAAE1B;YAAiB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eACRzD,OAAA;YAAK0D,SAAS,EAAC,qBAAqB;YAAAL,QAAA,gBAClCrD,OAAA;cACEa,IAAI,EAAC,QAAQ;cACbmD,OAAO,EAAE3D,SAAS,GAAG4B,aAAa,GAAGhB,cAAe;cACpDyC,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAE1BhD,SAAS,GAAG,gBAAgB,GAAG;YAAc;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,EACRlD,SAAS,iBAAIP,OAAA;cAAAqD,QAAA,EAAG;YAAoC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACNzD,OAAA;YAAQa,IAAI,EAAC,QAAQ;YAAC6C,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNzD,OAAA;QAAK0D,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BrD,OAAA;UAAAqD,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BzD,OAAA;UAAAqD,QAAA,gBACErD,OAAA;YAAAqD,QAAA,EAAI;UAA2C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpDzD,OAAA;YAAAqD,QAAA,EAAI;UAA0D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnEzD,OAAA;YAAAqD,QAAA,GAAI,4BAA0B,eAAArD,OAAA;cAAAqD,QAAA,EAAG;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpEzD,OAAA;YAAAqD,QAAA,EAAI;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzD,OAAA,CAACF,UAAU;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACd,CAAC;AAEP,CAAC;AAACrD,EAAA,CA7HID,KAAK;AAAA8D,EAAA,GAAL9D,KAAK;AA+HX,eAAeA,KAAK;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}