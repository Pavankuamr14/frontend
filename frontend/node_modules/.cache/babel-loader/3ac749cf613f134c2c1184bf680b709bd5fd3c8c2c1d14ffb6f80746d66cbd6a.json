{"ast":null,"code":"// // App.js\n// import React, { useState } from \"react\";\n// import \"./audio.css\";\n// import Nav from \"./nav\";\n// import UserFooter from \"./userfooter\";\n// const Audio = () => {\n//   const [recording, setRecording] = useState(false);\n//   const [audioBlob, setAudioBlob] = useState(null);\n//   const [mediaRecorder, setMediaRecorder] = useState(null);\n\n//   const startRecording = async () => {\n//     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n//     const recorder = new MediaRecorder(stream);\n//     const chunks = [];\n\n//     recorder.ondataavailable = (e) => chunks.push(e.data);\n//     recorder.onstop = () => {\n//       setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\n//     };\n\n//     recorder.start();\n//     setMediaRecorder(recorder);\n//     setRecording(true);\n//   };\n\n//   const stopRecording = () => {\n//     mediaRecorder.stop();\n//     setRecording(false);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!file) {\n//       alert(\"Please select a video file.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"video\", file);\n\n//     try {\n//       const res = await fetch(\"http://127.0.0.1:5000/process-video\", {\n//         method: \"POST\",\n//         body: formData,\n//       });\n//       const data = await res.json();\n//       setResponse(data);\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//       alert(\"Failed to process video.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//     <Nav/>\n//     <div className=\"audiocontainer\">\n//       <div className=\"audiocard\">\n//         <h2>Submit Your Audio</h2>\n//         <form onSubmit={handleSubmit}>\n//           <label>\n//             Name:\n//             <input type=\"text\" name=\"name\" required />\n//           </label>\n//           <label>\n//             Type of Data:\n//             <select name=\"dataType\" required>\n//               <option value=\"\">Select</option>\n//               <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\n//               <option value=\"Cultural Explanations\">Cultural Explanations</option>\n//               <option value=\"Folk Songs\">Folk Songs</option>\n//               <option value=\"Language and Dialects\">Language and Dialects</option>\n//               <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\n//             </select>\n//           </label>\n//           <label>\n//             Upload Audio:\n//             <input type=\"file\" accept=\"audio/*\" />\n//           </label>\n//           <div className=\"audiorecord-section\">\n//             <button\n//               type=\"button\"\n//               onClick={recording ? stopRecording : startRecording}\n//               className=\"audiorecord-btn\"\n//             >\n//               {recording ? \"Stop Recording\" : \"Record Audio\"}\n//             </button>\n//           </div>\n//           {audioBlob && <p>Recording saved! You can submit now.</p>}\n//           <button type=\"submit\" className=\"audiosubmit-btn\">\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//       <div className=\"audiocard rules\">\n//         <h2>Rules and Conditions</h2>\n//         <ul>\n//           <li>No background noise in the audio recording.</li>\n//           <li>Start the audio with your name and the place you are from.</li>\n//           <li>Specify the place format: <b>village name, mandal name</b>.</li>\n//           <li>Then begin the original content.</li>\n//         </ul>\n//       </div>\n//     </div>\n//     <UserFooter/>\n//     </>\n//   );\n// }\n\n// export default Audio;","map":{"version":3,"names":[],"sources":["C:/Users/PAVAN SAI KUMAR/OneDrive/Desktop/frontend/frontend/src/components/user/audio.js"],"sourcesContent":["// // App.js\r\n// import React, { useState } from \"react\";\r\n// import \"./audio.css\";\r\n// import Nav from \"./nav\";\r\n// import UserFooter from \"./userfooter\";\r\n// const Audio = () => {\r\n//   const [recording, setRecording] = useState(false);\r\n//   const [audioBlob, setAudioBlob] = useState(null);\r\n//   const [mediaRecorder, setMediaRecorder] = useState(null);\r\n\r\n//   const startRecording = async () => {\r\n//     const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n//     const recorder = new MediaRecorder(stream);\r\n//     const chunks = [];\r\n\r\n//     recorder.ondataavailable = (e) => chunks.push(e.data);\r\n//     recorder.onstop = () => {\r\n//       setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\r\n//     };\r\n\r\n//     recorder.start();\r\n//     setMediaRecorder(recorder);\r\n//     setRecording(true);\r\n//   };\r\n\r\n//   const stopRecording = () => {\r\n//     mediaRecorder.stop();\r\n//     setRecording(false);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!file) {\r\n//       alert(\"Please select a video file.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"video\", file);\r\n\r\n//     try {\r\n//       const res = await fetch(\"http://127.0.0.1:5000/process-video\", {\r\n//         method: \"POST\",\r\n//         body: formData,\r\n//       });\r\n//       const data = await res.json();\r\n//       setResponse(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading file:\", error);\r\n//       alert(\"Failed to process video.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//     <Nav/>\r\n//     <div className=\"audiocontainer\">\r\n//       <div className=\"audiocard\">\r\n//         <h2>Submit Your Audio</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <label>\r\n//             Name:\r\n//             <input type=\"text\" name=\"name\" required />\r\n//           </label>\r\n//           <label>\r\n//             Type of Data:\r\n//             <select name=\"dataType\" required>\r\n//               <option value=\"\">Select</option>\r\n//               <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\r\n//               <option value=\"Cultural Explanations\">Cultural Explanations</option>\r\n//               <option value=\"Folk Songs\">Folk Songs</option>\r\n//               <option value=\"Language and Dialects\">Language and Dialects</option>\r\n//               <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\r\n//             </select>\r\n//           </label>\r\n//           <label>\r\n//             Upload Audio:\r\n//             <input type=\"file\" accept=\"audio/*\" />\r\n//           </label>\r\n//           <div className=\"audiorecord-section\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={recording ? stopRecording : startRecording}\r\n//               className=\"audiorecord-btn\"\r\n//             >\r\n//               {recording ? \"Stop Recording\" : \"Record Audio\"}\r\n//             </button>\r\n//           </div>\r\n//           {audioBlob && <p>Recording saved! You can submit now.</p>}\r\n//           <button type=\"submit\" className=\"audiosubmit-btn\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//       <div className=\"audiocard rules\">\r\n//         <h2>Rules and Conditions</h2>\r\n//         <ul>\r\n//           <li>No background noise in the audio recording.</li>\r\n//           <li>Start the audio with your name and the place you are from.</li>\r\n//           <li>Specify the place format: <b>village name, mandal name</b>.</li>\r\n//           <li>Then begin the original content.</li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//     <UserFooter/>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Audio;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}