{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAVAN SAI KUMAR\\\\OneDrive\\\\Desktop\\\\frontend\\\\frontend\\\\src\\\\components\\\\user\\\\audio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./audio.css\";\nimport Nav from \"./nav\";\nimport UserFooter from \"./userfooter\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const recorder = new MediaRecorder(stream);\n    const chunks = [];\n    recorder.ondataavailable = e => chunks.push(e.data);\n    recorder.onstop = () => {\n      setAudioBlob(new Blob(chunks, {\n        type: \"audio/wav\"\n      }));\n    };\n    recorder.start();\n    setMediaRecorder(recorder);\n    setRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setAudioBlob(null); // Clear recorded audio if a file is selected\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!audioBlob && !selectedFile) {\n      alert(\"Please record or upload an audio file.\");\n      return;\n    }\n    const formData = new FormData();\n    if (audioBlob) {\n      formData.append(\"audio\", audioBlob, \"recording.wav\");\n    } else if (selectedFile) {\n      formData.append(\"audio\", selectedFile);\n    }\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/process-audio\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (data.error) {\n        alert(\"Error processing audio: \" + data.error);\n      } else {\n        setPopupMessage(data.result);\n        alert(data.result); // Popup message\n      }\n    } catch (error) {\n      console.error(\"Error uploading audio:\", error);\n      alert(\"Failed to process audio.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audiocontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audiocard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Submit Your Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Type of Data:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"dataType\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Local Legends and Stories\",\n                children: \"Local Legends and Stories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cultural Explanations\",\n                children: \"Cultural Explanations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Folk Songs\",\n                children: \"Folk Songs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Language and Dialects\",\n                children: \"Language and Dialects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Traditional Crop Information\",\n                children: \"Traditional Crop Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Audio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"audio/*\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audiorecord-section\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: recording ? stopRecording : startRecording,\n              className: \"audiorecord-btn\",\n              children: recording ? \"Stop Recording\" : \"Record Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Recording saved! You can submit now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File selected: \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"audiosubmit-btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audiocard rules\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Rules and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No background noise in the audio recording.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Start the audio with your name and the place you are from.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Specify the place format: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"village name, mandal name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 43\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Then begin the original content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Audio, \"9eErbNLTO08nt/JSKXsYASUIwVc=\");\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["React","useState","Nav","UserFooter","jsxDEV","_jsxDEV","Fragment","_Fragment","Audio","_s","recording","setRecording","audioBlob","setAudioBlob","mediaRecorder","setMediaRecorder","selectedFile","setSelectedFile","popupMessage","setPopupMessage","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","chunks","ondataavailable","e","push","data","onstop","Blob","type","start","stopRecording","stop","handleFileChange","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","res","fetch","method","body","json","error","result","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","name","required","value","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PAVAN SAI KUMAR/OneDrive/Desktop/frontend/frontend/src/components/user/audio.js"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport \"./audio.css\";\r\nimport Nav from \"./nav\";\r\nimport UserFooter from \"./userfooter\";\r\n\r\nconst Audio = () => {\r\n  const [recording, setRecording] = useState(false);\r\n  const [audioBlob, setAudioBlob] = useState(null);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n\r\n  const startRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const recorder = new MediaRecorder(stream);\r\n    const chunks = [];\r\n\r\n    recorder.ondataavailable = (e) => chunks.push(e.data);\r\n    recorder.onstop = () => {\r\n      setAudioBlob(new Blob(chunks, { type: \"audio/wav\" }));\r\n    };\r\n\r\n    recorder.start();\r\n    setMediaRecorder(recorder);\r\n    setRecording(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    mediaRecorder.stop();\r\n    setRecording(false);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n    setAudioBlob(null); // Clear recorded audio if a file is selected\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!audioBlob && !selectedFile) {\r\n      alert(\"Please record or upload an audio file.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    if (audioBlob) {\r\n      formData.append(\"audio\", audioBlob, \"recording.wav\");\r\n    } else if (selectedFile) {\r\n      formData.append(\"audio\", selectedFile);\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://127.0.0.1:5000/process-audio\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.error) {\r\n        alert(\"Error processing audio: \" + data.error);\r\n      } else {\r\n        setPopupMessage(data.result);\r\n        alert(data.result); // Popup message\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n      alert(\"Failed to process audio.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"audiocontainer\">\r\n        <div className=\"audiocard\">\r\n          <h2>Submit Your Audio</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" name=\"name\" required />\r\n            </label>\r\n            <label>\r\n              Type of Data:\r\n              <select name=\"dataType\" required>\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Local Legends and Stories\">Local Legends and Stories</option>\r\n                <option value=\"Cultural Explanations\">Cultural Explanations</option>\r\n                <option value=\"Folk Songs\">Folk Songs</option>\r\n                <option value=\"Language and Dialects\">Language and Dialects</option>\r\n                <option value=\"Traditional Crop Information\">Traditional Crop Information</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              Upload Audio:\r\n              <input\r\n                type=\"file\"\r\n                accept=\"audio/*\"\r\n                onChange={handleFileChange}\r\n              />\r\n            </label>\r\n            <div className=\"audiorecord-section\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={recording ? stopRecording : startRecording}\r\n                className=\"audiorecord-btn\"\r\n              >\r\n                {recording ? \"Stop Recording\" : \"Record Audio\"}\r\n              </button>\r\n            </div>\r\n            {audioBlob && <p>Recording saved! You can submit now.</p>}\r\n            {selectedFile && <p>File selected: {selectedFile.name}</p>}\r\n            <button type=\"submit\" className=\"audiosubmit-btn\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"audiocard rules\">\r\n          <h2>Rules and Conditions</h2>\r\n          <ul>\r\n            <li>No background noise in the audio recording.</li>\r\n            <li>Start the audio with your name and the place you are from.</li>\r\n            <li>Specify the place format: <b>village name, mandal name</b>.</li>\r\n            <li>Then begin the original content.</li>\r\n          </ul>\r\n        </div>\r\n        {popupMessage && <div className=\"popup\">{popupMessage}</div>}\r\n      </div>\r\n      <UserFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}